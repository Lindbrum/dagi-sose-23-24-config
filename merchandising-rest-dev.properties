#datasource
# set to "create" to always re-create tables, "update" to only create at first then alter, "none" to not create/alter schema
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DDL_AUTO_MODE}
hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#Changes this to "always" to initialize tables, otherwise set to "none"
spring.sql.init.mode=${SQL_INIT_MODE}
spring.sql.init.platform=mysql
spring.datasource.url=jdbc:mysql://${MYSQL_CONTAINER}:${MYSQL_PORT}/${MYSQL_DATABASE}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.defer-datasource-initialization: true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.sql.init.data-locations=classpath*:data.sql

# Actuator configuration
management.endpoints.web.exposure.include=health,info
management.info.env.enabled=true
 
# Application info (to be exposed by /info actuator)
info.application.name=DaGi merchandising REST provider
info.application.description=A REST microservice allowing management and retrieval of info on even merchandise.
info.application.version=0.0.1-SNAPSHOT

cxf.path=/api/merchandise-rest

# Discovery client
eureka.client.register-with-eureka=true
eureka.client.healthcheck.enabled=true
eureka.client.service-url.defaultZone=${EUREKA_SERVER}
eureka.instance.lease-renewal-interval-in-seconds=30

#This allows execution of data.sql after Hybernate generated the tables (without this Spring throws exception if the table wasn't already generated)
spring.jpa.defer-datasource-initialization=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


swagger.definition.version=0.1.0

server.port=8085

#Service settings
service.merchandise.catalogue.items-per-page=15
